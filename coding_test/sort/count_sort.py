# 특정한 조건이 부합할 때만 사용할 수 있지만 매우 빠른 정렬 알고리즘
# 조건: 데이터의 크기 범위가 제한되어 정수 형태로 표현할 수 있을 때
#
# 일반적으로 가장 큰 데이터와 가장 작은 데이터의 차이가 
# 1,000,000을 넘지 않을 때 효과적으로 사용할 수 있음

# 이유: 모든 범위를 담을 수 있는 크기의 리스트를 선언해야되기 때문
# 비교 기반 정렬 알고리즘이 아님

# 기수 정렬과 더불어 가장 빠르게 동작한다

# 계수 정렬의 시간복잡도 > O(N + K)
# (N > 데이터의 개수, K > 데이터 중 최댓값 크기)

# 계수 정렬의 공간복잡도 > O(N + K)
# 심각한 비효율성을 초래할 수 있음
# ex) [0, 9999999]
# 동일한 값을 가지는 데이터가 여러 개 등장할 때 적합함
# 데이터의 특성을 파악하기 어렵다면 퀵 정렬을 사용하자


array = [7, 5, 9, 0, 3, 1, 6, 2, 9, 1, 4, 8, 0, 5, 2]
count = [0] * 10
for i in array:
    count[i] += 1

for i in range(len(count)):
    for j in range(count[i]):
        print(i, end=' ')
